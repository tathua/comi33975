/* Pasar de id a ternario
let temperatura = 110

//if simple
if (temperatura > 30) {
    alert("Día caluroso!")
  } else {
    alert("Día agradable")
  }
  

//operador ternario

temperatura > 30 ? alert("Día caluroso!") : alert("Día agradable")
// condición     ?      true              : false


//ternario en obj
//Ejemplo objetos:
const nombre = prompt("ingrese nombre:")
const apellido = prompt("ingrese apellido")

const nuevoIntengrante = {
    nombre: nombre,
    apellido: apellido ? apellido : "no valido"
}

console.log(nuevoIntengrante)

//ejemplo 2 en obj

const carrito = []

if (carrito.length === 0) {
    // 0        === 0
  console.log("El carrito está vacío!") //true
}



---- OPERADORES LÓGICOS

// con operador AND
carrito.length === 0 && console.log("El carrito está vacío!")
   //  0   ===         &&    true


const usuario = {
    nombre: "John Doe",
    edad: 2
  }
  
  const registroIngreso = usuario.edad >= 18 && new Date()
  
  console.log(registroIngreso)
  

*/
/*
const usuario1 = 0
  
  const usuario2 = null
  
  console.log( usuario1 ?? "El usuario no existe" )
  // { nombre: 'John Doe', edad: 14 }
  
  console.log( usuario2 ?? "El usuario no existe" )
// El usuario no existe
*/
/*

//Operador OR
let carrito

let carritoLocalStorage = JSON.parse( localStorage.getItem('carrito') )

if (carritoLocalStorage) {
  carrito = carritoLocalStorage
} else {
  carrito = []
}

const carrito = JSON.parse(localStorage.getItem('carrito')) || []
//                            truty                         || falsy   



const usuario = {
    nombre: "John Doe",
    edad: 2
}

console.log( usuario.nombre || "El usuario no existe" )
// Error: "No se pueden leer propiedades de NULL"

console.log( usuario?.nombre || "El usuario no existe")
// "El usuario no existe"

// ?

const usuario = {
    nombre: "John Doe",
    edad: 22,
    cursos: {
      javascript: "aprobado"
    }
  }
  
  console.log( usuario?.cursos?.javascript || "La propiedad no existe")
  // "aprobado"
  console.log( usuario?.trabajos?.coderhouse || "La propiedad no existe")
  // "La propiedad no existe"
  
  */
/*
  const usuario = {
    nombre: "Juan",
    edad: 21,
    comida: "Pastas",
    color: "rojo"

  }
  //--------DESESTRUCTURAR 

  //let comida = usuario.comida
  //console.log(comida)

  let {nombre, edad, comida, color }= usuario

  console.log(pastas)
  console.log(edad)
  console.log(nombre)
  console.log(color)
  console.log(telefono)

  

  const usuario = {
    nombre: "John Doe",
    edad: 32,
    telefono: {
        cel: 113334444,
        casa: null,
        trabajo: 113325555
    }
}

let { nombre, edad , telefono:{cel}} = usuario
console.log(edad)
console.log(cel)




const item = {
    item_id: 432,
    product_name: "Some product",
    price_per_unit: 5600
}

const {
    item_id: id,
    product_name: nombre,
    price_per_unit: precio
} = item

console.log(id) // 432
console.log(nombre) // "Some product"
console.log(precio) // 5600


---- DESESTRUCTURAR CON PARÁMETROS

const usuario = {
    nombre: "John Doe",
    edad: 32,
    
}

const producto = {
    id: 10,
    nombre: "Curso Javascript",
    precio: 12500
}

const desestructurar = (item) => {
    // desestructurando dentro del bloque
    const {id, nombre} = item
    console.log(id, nombre)
}

desestructurar(usuario) // 10 Curso Javascript
desestructurar(producto)


const desarmalo = (obj) => {
    const {nombre , edad} = obj
    console.log(nombre, edad)
}

desarmalo(usuario)

----DESESTRUCTURAR ARRAY

const nombres = ["Juan", "Julieta", "Carlos", "Mariela"]

// omito las dos primeras posiciones
const [, , a, b] = nombres

console.log(a) // "Carlos"
console.log(b) // "Mariela"

---- SPREAD


const numeros = [4, 77, 92, 10, 3, -32, 54, 11]

console.log( Math.max(...numeros) ) // NaN



const nombres = ["Juan", "Julieta", "Carlos", "Mariela"]

// spread ... del array
console.log(...nombres) // Juan Julieta Carlos Mariela

// equivalente a:
console.log("Juan", "Julieta", "Carlo", "Mariela")




const nombres1 = ["Juan", "Julieta"]
const nombres2 = ["Carlos", "Mariela"]

console.log(nombres1)
console.log(nombres2)
// spread de los dos arrays dentro de otro
const nombres = [...nombres1, ...nombres2]

console.log(nombres) // ["Juan", "Julieta", "Carlos", "Mariela"]

// spread del array en un objeto
const nombresObj = {
    ...nombres
}

console.log(nombresObj)
// { '0': 'Juan', '1': 'Julieta', '2': 'Carlos', '3': 'Mariela' }

-----SPREAD EN OBJ

const usuario1 = {
    nombre: "Juan",
    edad: 24,
    curso: "Javascript"
}

// lista todas las propiedades y valores de usuario1 dentro de otro objeto
const usuario2 = {
    ...usuario1
}

//console.log(usuario2) // { nombre: 'Juan', edad: 24, curso: 'Javascript' }

const usuario3 = {
    ...usuario1,
    curso: "ReactJS",
    email: "juan@doe.com"
}

console.log(usuario3)
// { nombre: 'Juan', edad: 24, curso: 'ReactJS', email: 'juan@doe.com' }


const usuario4 = {
    ...usuario1,
   
    comida: "Pastas",
    curso: "JS"
}

console.log(usuario4)

*/
// SPREAD COMO PARÁMETRO
function sumar(...numeros) {
    console.log(numeros)
}

sumar(4, 2) // [ 4, 2 ]
sumar(10, 15, 30, 5, 2, 4, 3, 45) // [ 10, 15, 30, 
